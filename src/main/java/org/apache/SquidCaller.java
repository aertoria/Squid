package org.apache;

import com.google.protobuf.BlockingRpcChannel;
import com.google.protobuf.ServiceException;
import org.apache.Squid.autogenerated.Sum;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hbase.HBaseConfiguration;
import org.apache.hadoop.hbase.client.HConnection;
import org.apache.hadoop.hbase.client.HConnectionManager;
import org.apache.hadoop.hbase.client.HTable;
import org.apache.hadoop.hbase.client.HTableInterface;
import org.apache.hadoop.hbase.client.coprocessor.Batch;
import org.apache.hadoop.hbase.ipc.BlockingRpcCallback;

import java.io.IOException;
import java.util.Map;

public class SquidCaller {

    public SquidCaller() throws IOException {
    }

    public static void main(String[] args) throws IOException {
        Configuration conf= HBaseConfiguration.create();
        HConnection connection= HConnectionManager.createConnection(conf);
        HTableInterface table=connection.getTable("table1");

        //Serilize a sumrequest object using protobuff
        final Sum.SumRequest request = Sum.SumRequest.newBuilder().setFamily("cf1")
                .setColumn("c1").build();
        try{
            Map<byte[], Long> result = table.coprocessorService(Sum.SumService.class,null,null,
                    new Batch.Call<Sum.SumService, Long>(){

                        @Override
                        public Long call(Sum.SumService aggregate) throws IOException {
                            BlockingRpcCallback rpcCallback = new BlockingRpcCallback();

                            //GO to Region server side, call getSum on SumService interface
                            //And we know it has been wired to SumEndPoint impl,
                            aggregate.getSum(null,request,rpcCallback);
                            Sum.SumResponse response = (Sum.SumResponse) rpcCallback.get();
                            return response.hasSum()? response.getSum() : 16L;
                        }
                    });

            for(Long sum:result.values()){
                System.out.println("Sum = " + sum);
            }


        } catch (ServiceException e) {
            e.printStackTrace();
        } catch (Throwable throwable) {
            throwable.printStackTrace();
        }
    }
}
